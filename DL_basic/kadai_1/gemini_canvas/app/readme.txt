食べログスクレイピング Webアプリ
PythonのFlaskフレームワークを使用してローカルWebサーバーを構築し、食べログのレストラン情報を表示するアプリケーションです。

概要
app.pyを実行すると、Webサーバーが起動します。このサーバーは、食べログの特定ページのレストラン情報をリアルタイムでスクレイピングし、整形してWebページに表示します。ページには更新ボタンがあり、クリックすることで再度スクレイピングを行い、最新の情報に更新できます。

ファイル構成
プロジェクトは以下のファイルで構成されます。

/your_project_directory
|-- app.py             # Flaskアプリケーション本体
|-- templates/
|   |-- index.html     # 表示用のHTMLテンプレート
|-- README.md          # このファイル

重要: app.pyと同じ階層にtemplatesという名前のフォルダを作成し、その中にindex.htmlを配置してください。これはFlaskの仕様です。

必要なライブラリ
このアプリケーションを実行するには、以下のPythonライブラリが必要です。

Flask: Webフレームワーク

requests: HTTPリクエストを送信するためのライブラリ

beautifulsoup4: HTMLやXMLからデータを抽出するためのライブラリ

セットアップ方法
ライブラリのインストール:
ターミナルまたはコマンドプロンプトを開き、以下のコマンドを実行して必要なライブラリをインストールします。

pip install Flask requests beautifulsoup4

ファイルの配置:
上記のファイル構成に従い、app.pyとtemplates/index.htmlを配置します。

実行方法
ターミナルでapp.pyが保存されているディレクトリに移動します。

以下のコマンドを実行して、Flaskサーバーを起動します。

python app.py

サーバーが起動すると、ターミナルに以下のようなメッセージが表示されます。

 * Running on [http://127.0.0.1:5001/](http://127.0.0.1:5001/) (Press CTRL+C to quit)

お使いのWebブラウザで http://127.0.0.1:5001/ にアクセスしてください。スクレイピング結果が表示されます。

注意事項
スクレイピングに関する注意: Webスクレイピングは、対象サイトの利用規約やrobots.txtを遵守し、サーバーに過度な負荷をかけないように注意して行う必要があります。本コードは学習目的で作成されたものです。

サイト構造の変更: スクレイピングはWebサイトのHTML構造に依存します。食べログのサイトデザインが変更された場合、このコードは正しく動作しなくなる可能性があります。その際は、app.py内のクラス名などを適宜修正する必要があります。